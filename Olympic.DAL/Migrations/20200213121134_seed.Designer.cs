// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Olympic.DAL.Database;

namespace Olympic.DAL.Migrations
{
    [DbContext(typeof(OlympicDbContext))]
    [Migration("20200213121134_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Olympic.DAL.Database.Entities.Medal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OlympiconId");

                    b.Property<int>("Place");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("OlympiconId");

                    b.ToTable("Medals");

                    b.HasData(
                        new { Id = 1, OlympiconId = 1, Place = 3, Year = 2008 },
                        new { Id = 2, OlympiconId = 1, Place = 1, Year = 2016 },
                        new { Id = 3, OlympiconId = 2, Place = 2, Year = 2012 },
                        new { Id = 4, OlympiconId = 3, Place = 3, Year = 2008 }
                    );
                });

            modelBuilder.Entity("Olympic.DAL.Database.Entities.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new { Id = 1, Country = "USA" },
                        new { Id = 2, Country = "GRB" },
                        new { Id = 3, Country = "HUN" },
                        new { Id = 4, Country = "FR" }
                    );
                });

            modelBuilder.Entity("Olympic.DAL.Database.Entities.Olympicon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Forename")
                        .IsRequired();

                    b.Property<int>("NationalityId");

                    b.Property<int>("Sport");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.ToTable("Olympicons");

                    b.HasData(
                        new { Id = 1, Age = 24, Birthday = new DateTime(1995, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), Forename = "John", NationalityId = 1, Sport = 0, Surname = "Doe" },
                        new { Id = 2, Age = 29, Birthday = new DateTime(1990, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Forename = "Jane", NationalityId = 1, Sport = 2, Surname = "Doe" },
                        new { Id = 3, Age = 23, Birthday = new DateTime(1996, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Forename = "Er", NationalityId = 2, Sport = 3, Surname = "Cycl" },
                        new { Id = 4, Age = 24, Birthday = new DateTime(1995, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), Forename = "Ther", NationalityId = 3, Sport = 5, Surname = "Fig" },
                        new { Id = 5, Age = 29, Birthday = new DateTime(1990, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), Forename = "Else", NationalityId = 3, Sport = 0, Surname = "Someone" },
                        new { Id = 6, Age = 24, Birthday = new DateTime(1995, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), Forename = "Person", NationalityId = 3, Sport = 6, Surname = "Random" },
                        new { Id = 7, Age = 24, Birthday = new DateTime(1995, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), Forename = "Forename", NationalityId = 4, Sport = 5, Surname = "Surname" }
                    );
                });

            modelBuilder.Entity("Olympic.DAL.Database.Entities.Medal", b =>
                {
                    b.HasOne("Olympic.DAL.Database.Entities.Olympicon", "Olympicon")
                        .WithMany("Medals")
                        .HasForeignKey("OlympiconId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Olympic.DAL.Database.Entities.Olympicon", b =>
                {
                    b.HasOne("Olympic.DAL.Database.Entities.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
